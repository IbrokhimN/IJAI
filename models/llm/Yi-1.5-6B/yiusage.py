from llama_cpp import Llama
import pyttsx3
import threading
import queue
import time

# –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏
model_path = "Yi-1.5-6B-Chat-Q4_K_M.gguf"

# –∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
llm = Llama(
    model_path=model_path,
    n_ctx=4096,
    n_threads=8,
    verbose=False
)

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º TTS
engine = pyttsx3.init()
engine.setProperty("rate", 170)  # —Å–∫–æ—Ä–æ—Å—Ç—å
engine.setProperty("volume", 1.0)

# –æ—á–µ—Ä–µ–¥—å –¥–ª—è —Ä–µ—á–∏
speech_queue = queue.Queue()

def tts_worker():
    """–§–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫: –∑–∞–±–∏—Ä–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∏ –æ–∑–≤—É—á–∏–≤–∞–µ—Ç"""
    while True:
        text = speech_queue.get()
        if text is None:  # —Å–∏–≥–Ω–∞–ª –≤—ã—Ö–æ–¥–∞
            break
        engine.say(text)
        engine.runAndWait()
        speech_queue.task_done()

# –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ TTS
threading.Thread(target=tts_worker, daemon=True).start()

print("ü§ñ Yi-1.5 Chat (–≤–≤–µ–¥–∏ 'exit' —á—Ç–æ–±—ã –≤—ã–π—Ç–∏)\n")
messages = [{"role": "system", "content": "You are a helpful assistant."}]

while True:
    user_input = input("üë§ You: ")
    if user_input.lower() in {"exit", "quit"}:
        speech_queue.put(None)  # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º TTS –ø–æ—Ç–æ–∫
        break

    messages.append({"role": "user", "content": user_input})
    print("ü§ñ Bot: ", end="", flush=True)

    # —Å—Ç—Ä–∏–º–∏–º –æ—Ç–≤–µ—Ç
    stream = llm.create_chat_completion(
        messages=messages,
        max_tokens=200,
        temperature=0.7,
        stream=True
    )

    reply = ""
    buffer = ""
    for chunk in stream:
        delta = chunk["choices"][0]["delta"]
        if "content" in delta:
            text = delta["content"]
            reply += text
            buffer += text
            print(text, end="", flush=True)

            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—É—Å–∫–∏ –≤ –æ–∑–≤—É—á–∫—É –ø–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º
            if any(end in buffer for end in [".", "?", "!"]):
                speech_queue.put(buffer.strip())
                buffer = ""

    # –æ—Å—Ç–∞—Ç–æ–∫ –¥–æ—á–∏—Ç–∞—Ç—å
    if buffer.strip():
        speech_queue.put(buffer.strip())

    print("\n")
    messages.append({"role": "assistant", "content": reply})

